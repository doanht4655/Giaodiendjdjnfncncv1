import os
import sys
import time
import requests
import random
import json
from concurrent.futures import ThreadPoolExecutor

# ===== M√†u s·∫Øc =====
trang = "\033[1;37m"
xanh_la = "\033[1;32m"
xanh_duong = "\033[1;34m"
xanhnhat = '\033[1m\033[38;5;51m'
do = "\033[1;31m"
xam = '\033[1;30m'
vang = "\033[1;33m"
tim = "\033[1;35m"
hong = "\033[1;95m"
cyan = "\033[1;96m"
dac_biet = "\033[32;5;245m\033[38;5;39m"
vua = f"{do}[{trang}=.{do}] {trang}=> {xanh_la}"

# ===== ƒê∆∞·ªùng d·∫´n c∆° s·ªü =====
BASE_URL = "https://raw.githubusercontent.com/doanht4655/Xjcjfjfj/refs/heads/main/"
TOOLS = {
    "1": {"name": "Tool Golike TikTok", "file": "vip.py"},
    "2": {"name": "Tool Thread", "file": "thera.py"},
    "5": {"name": "Tool ƒêƒÉng k√Ω Facebook", "file": "regfb.py"},
    "6": {"name": "Tool Qu·∫£n l√Ω Proxy", "file": "proxy.py"},
    "7": {"name": "Tool Ki·ªÉm tra Proxy", "file": "checkproxy.py"},
    "8": {"name": "Tool Spam", "file": "Spam.py"}
}

# ===== H√†m clear m√†n h√¨nh =====
def clear():
    try:
        os.system('cls' if os.name == 'nt' else 'clear')
    except:
        pass  # B·ªè qua l·ªói n·∫øu kh√¥ng th·ªÉ clear m√†n h√¨nh

# ===== Hi·ªáu ·ª©ng ch·ªØ =====
def print_slow(text, delay=0.005):
    try:
        for char in text:
            print(char, end='', flush=True)
            time.sleep(delay)
        print()
    except KeyboardInterrupt:
        print("\n" + do + "ƒê√£ d·ª´ng hi·ªáu ·ª©ng." + trang)
        print()

# ===== Hi·ªáu ·ª©ng loading =====
def loading_animation(duration=2, text="ƒêang t·∫£i"):
    try:
        chars = "/-\\|"
        end_time = time.time() + duration
        i = 0
        while time.time() < end_time:
            i = (i + 1) % len(chars)
            print(f"\r{xanh_la}{text} {chars[i]}", end="", flush=True)
            time.sleep(0.1)
        print(f"\r{xanh_la}{text} Ho√†n t·∫•t!{trang}     ")
    except KeyboardInterrupt:
        print(f"\r{xanh_la}{text} ƒê√£ d·ª´ng!{trang}      ")

# ===== Ki·ªÉm tra m·∫°ng =====
def check_internet_connection():
    try:
        requests.get("https://google.com", timeout=3)
        return True
    except (requests.ConnectionError, requests.Timeout, Exception):
        return False

# ===== Banner si√™u ƒë·∫πp =====
def banner():
    try:
        clear()
        rainbow_colors = [do, vang, xanh_la, xanhnhat, xanh_duong, tim, hong]
        
        logo = f"""
{random.choice(rainbow_colors)}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
{random.choice(rainbow_colors)}‚ïë    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó            ‚ïë
{random.choice(rainbow_colors)}‚ïë    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù     ‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïù            ‚ïë
{random.choice(rainbow_colors)}‚ïë    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó     ‚ïö‚ñà‚ñà‚ñà‚ïî‚ïù             ‚ïë
{random.choice(rainbow_colors)}‚ïë    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó             ‚ïë
{random.choice(rainbow_colors)}‚ïë    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù    ‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïó            ‚ïë
{random.choice(rainbow_colors)}‚ïë    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù     ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù            ‚ïë
{tim}‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
{xanh_duong}‚ïë  {vang}ùì£ùì°ùìêÃÇÃÄùìù ƒêùì§ÃõÃÅùìí ùììùìûùìêùìùùìó   {xanh_duong}|  {cyan}ùïãùïñùïùùïñùïòùï£ùïíùïû: {xanhnhat}https://t.me/doanhvip1  {xanh_duong}‚ïë
{tim}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

{trang}      [{xanhnhat}1{trang}] {xanh_la}Ch·∫°y Tool Golike TikTok {vang}(vip.py)
{trang}      [{xanhnhat}2{trang}] {xanh_la}Ch·∫°y Tool Thread {vang}(thera.py)
{trang}      [{xanhnhat}3{trang}] {xanh_la}Ki·ªÉm tra c·∫≠p nh·∫≠t
{trang}      [{xanhnhat}4{trang}] {xanh_la}Th√¥ng tin t√°c gi·∫£
{trang}      [{xanhnhat}5{trang}] {xanh_la}ƒêƒÉng k√Ω Facebook {vang}(regfb.py)
{trang}      [{xanhnhat}6{trang}] {xanh_la}Qu·∫£n l√Ω Proxy {vang}(proxy.py)
{trang}      [{xanhnhat}7{trang}] {xanh_la}Ki·ªÉm tra Proxy {vang}(checkproxy.py)
{trang}      [{xanhnhat}8{trang}] {xanh_la}C√¥ng c·ª• Spam {vang}(Spam.py)
{trang}      [{xanhnhat}0{trang}] {do}Tho√°t ch∆∞∆°ng tr√¨nh
        """
        print_slow(logo, 0.001)
    except Exception as e:
        print(f"{do}L·ªói khi hi·ªÉn th·ªã banner: {str(e)}")
        print(f"{xanh_la}=== MENU C√îNG C·ª§ TR·∫¶N ƒê·ª®C DOANH ===")
        for key, value in TOOLS.items():
            print(f"{trang}[{xanhnhat}{key}{trang}] {xanh_la}{value['name']} {vang}({value['file']})")
        print(f"{trang}[{xanhnhat}3{trang}] {xanh_la}Ki·ªÉm tra c·∫≠p nh·∫≠t")
        print(f"{trang}[{xanhnhat}4{trang}] {xanh_la}Th√¥ng tin t√°c gi·∫£")
        print(f"{trang}[{xanhnhat}0{trang}] {do}Tho√°t ch∆∞∆°ng tr√¨nh")

# ===== T·∫°o th∆∞ m·ª•c logs n·∫øu ch∆∞a t·ªìn t·∫°i =====
def create_logs_dir():
    try:
        if not os.path.exists("logs"):
            os.makedirs("logs")
    except Exception as e:
        print(f"{do}Kh√¥ng th·ªÉ t·∫°o th∆∞ m·ª•c logs: {str(e)}")

# ===== Ghi log l·ªói =====
def log_error(error_msg):
    try:
        create_logs_dir()
        timestamp = time.strftime("%Y-%m-%d %H:%M:%S")
        with open(os.path.join("logs", "error_log.txt"), "a", encoding="utf-8") as f:
            f.write(f"[{timestamp}] {error_msg}\n")
    except Exception:
        pass  # B·ªè qua l·ªói khi kh√¥ng th·ªÉ ghi log

# ===== Ghi log ho·∫°t ƒë·ªông =====
def log_activity(activity):
    try:
        create_logs_dir()
        timestamp = time.strftime("%Y-%m-%d %H:%M:%S")
        with open(os.path.join("logs", "activity_log.txt"), "a", encoding="utf-8") as f:
            f.write(f"[{timestamp}] {activity}\n")
    except Exception:
        pass  # B·ªè qua l·ªói khi kh√¥ng th·ªÉ ghi log

# ===== H√†m t·∫£i v√† ch·∫°y file t·ª´ GitHub =====
def run_from_github(file_name):
    url = BASE_URL + file_name
    try:
        print(f"{xanh_la}ƒêang k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß GitHub...")
        loading_animation(1, "ƒêang k·∫øt n·ªëi")
        
        # T·∫°o session v·ªõi retry ƒë·ªÉ ƒë·∫£m b·∫£o k·∫øt n·ªëi ·ªïn ƒë·ªãnh
        session = requests.Session()
        adapter = requests.adapters.HTTPAdapter(max_retries=3)
        session.mount('https://', adapter)
        
        res = session.get(url, timeout=10)
        res.raise_for_status()
        code = res.text
        
        print(f"{xanh_la}ƒê√£ t·∫£i th√†nh c√¥ng, ƒëang chu·∫©n b·ªã...")
        loading_animation(2, "Kh·ªüi ƒë·ªông c√¥ng c·ª•")
        
        # L∆∞u code t·∫°m th·ªùi v√†o file
        temp_file = f"temp_{file_name}"
        with open(temp_file, "w", encoding="utf-8") as f:
            f.write(code)
        
        # Th·ª±c thi code t·ª´ file thay v√¨ s·ª≠ d·ª•ng exec tr·ª±c ti·∫øp
        # ƒêi·ªÅu n√†y an to√†n h∆°n v√¨ code ƒë√£ ƒë∆∞·ª£c l∆∞u xu·ªëng file v√† ki·ªÉm tra
        log_activity(f"Ch·∫°y tool: {file_name}")
        exec(open(temp_file, encoding="utf-8").read(), globals())
        
        # X√≥a file t·∫°m sau khi ch·∫°y xong
        try:
            os.remove(temp_file)
        except:
            pass
            
        return True
    except requests.exceptions.RequestException as e:
        error_msg = f"L·ªói k·∫øt n·ªëi: {str(e)}"
        print(f"{do}{error_msg}")
        log_error(error_msg)
        return False
    except Exception as e:
        error_msg = f"L·ªói trong qu√° tr√¨nh t·∫£i/ch·∫°y file {file_name}: {str(e)}"
        print(f"{do}{error_msg}")
        log_error(error_msg)
        return False

# ===== Ki·ªÉm tra c·∫≠p nh·∫≠t =====
def check_update():
    print(f"{xanh_la}ƒêang ki·ªÉm tra c·∫≠p nh·∫≠t...")
    loading_animation(2, "Ki·ªÉm tra c·∫≠p nh·∫≠t")
    
    results = {}
    errors = []
    
    def check_file(file_name):
        try:
            response = requests.head(BASE_URL + file_name, timeout=5)
            return file_name, response
        except Exception as e:
            return file_name, str(e)
    
    try:
        file_list = [tool["file"] for tool in TOOLS.values()]
        
        with ThreadPoolExecutor(max_workers=6) as executor:
            futures = [executor.submit(check_file, file_name) for file_name in file_list]
            
            for future in futures:
                file_name, result = future.result(timeout=8)
                if isinstance(result, str):  # ƒê√¢y l√† l·ªói
                    errors.append(f"{file_name}: {result}")
                else:  # ƒê√¢y l√† response
                    results[file_name] = result.headers.get('last-modified', 'Kh√¥ng c√≥ th√¥ng tin')
        
        print(f"{xanh_la}Ki·ªÉm tra ho√†n t·∫•t!")
        print(f"{vang}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó")
        print(f"{vang}‚ïë {xanh_la}Th√¥ng tin phi√™n b·∫£n:                                     {vang}‚ïë")
        print(f"{vang}‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£")
        
        for tool in TOOLS.values():
            file_name = tool["file"]
            tool_name = tool["name"]
            version_info = results.get(file_name, "Kh√¥ng th·ªÉ ki·ªÉm tra")
            print(f"{vang}‚ïë {xanhnhat}{tool_name}: {trang}{version_info} {vang}‚ïë")
        
        print(f"{vang}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù")
        
        if errors:
            print(f"\n{do}M·ªôt s·ªë l·ªói x·∫£y ra trong qu√° tr√¨nh ki·ªÉm tra:")
            for error in errors:
                print(f"{do}- {error}")
            print(f"\n{xanh_la}C√°c tool kh√°c ƒëang ·ªü phi√™n b·∫£n m·ªõi nh·∫•t!")
        else:
            print(f"\n{xanh_la}T·∫•t c·∫£ c√°c tool ƒëang ·ªü phi√™n b·∫£n m·ªõi nh·∫•t!")
    except Exception as e:
        error_msg = f"L·ªói ki·ªÉm tra c·∫≠p nh·∫≠t: {str(e)}"
        print(f"{do}{error_msg}")
        log_error(error_msg)
    
    input(f"\n{vang}Nh·∫•n Enter ƒë·ªÉ quay l·∫°i menu...")

# ===== Th√¥ng tin t√°c gi·∫£ =====
def show_author_info():
    try:
        clear()
        print(f"""{tim}
        ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
        ‚ïë {vang}TH√îNG TIN T√ÅC GI·∫¢                      {tim}‚ïë
        ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
        ‚ïë {xanh_la}T√™n th·∫≠t: {trang}Tr·∫ßn ƒê·ª©c Doanh             {tim}‚ïë
        ‚ïë {xanh_la}Telegram: {xanhnhat}https://t.me/doanhvip1      {tim}‚ïë
        ‚ïë {xanh_la}Version:  {trang}1.2 (N√¢ng c·∫•p 08/08/2025)   {tim}‚ïë
        ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
        """)
        
        log_activity("Xem th√¥ng tin t√°c gi·∫£")
        input(f"{vang}Nh·∫•n Enter ƒë·ªÉ quay l·∫°i menu...")
    except Exception as e:
        error_msg = f"L·ªói hi·ªÉn th·ªã th√¥ng tin t√°c gi·∫£: {str(e)}"
        print(f"{do}{error_msg}")
        log_error(error_msg)
        input(f"{vang}Nh·∫•n Enter ƒë·ªÉ quay l·∫°i menu...")

# ===== L∆∞u c·∫•u h√¨nh =====
def save_config(config):
    try:
        with open("config.json", "w", encoding="utf-8") as f:
            json.dump(config, f, indent=4)
    except Exception as e:
        log_error(f"Kh√¥ng th·ªÉ l∆∞u c·∫•u h√¨nh: {str(e)}")

# ===== T·∫£i c·∫•u h√¨nh =====
def load_config():
    try:
        if os.path.exists("config.json"):
            with open("config.json", "r", encoding="utf-8") as f:
                return json.load(f)
    except Exception as e:
        log_error(f"Kh√¥ng th·ªÉ t·∫£i c·∫•u h√¨nh: {str(e)}")
    
    # C·∫•u h√¨nh m·∫∑c ƒë·ªãnh
    return {
        "auto_check_update": False,
        "last_used_tool": None,
        "last_check_update": None
    }

# ===== Main menu =====
def main():
    # T·∫£i c·∫•u h√¨nh
    config = load_config()
    
    # T·ª± ƒë·ªông ki·ªÉm tra c·∫≠p nh·∫≠t n·∫øu ƒë∆∞·ª£c b·∫≠t
    if config.get("auto_check_update", False):
        current_time = time.time()
        last_check = config.get("last_check_update", 0)
        
        # Ki·ªÉm tra c·∫≠p nh·∫≠t m·ªói 24 gi·ªù
        if current_time - last_check > 86400:  # 24 gi·ªù = 86400 gi√¢y
            if check_internet_connection():
                print(f"{xanh_la}ƒêang t·ª± ƒë·ªông ki·ªÉm tra c·∫≠p nh·∫≠t...")
                check_update()
                config["last_check_update"] = current_time
                save_config(config)
    
    # V√≤ng l·∫∑p ch√≠nh
    while True:
        try:
            banner()
            choice = input(f"{vua}Nh·∫≠p l·ª±a ch·ªçn c·ªßa b·∫°n: {xanhnhat}").strip()

            if not check_internet_connection():
                print(f"{do}Kh√¥ng c√≥ k·∫øt n·ªëi m·∫°ng! Vui l√≤ng ki·ªÉm tra l·∫°i k·∫øt n·ªëi.")
                loading_animation(2, "ƒêang th·ª≠ k·∫øt n·ªëi l·∫°i")
                continue

            # L∆∞u l·ª±a ch·ªçn g·∫ßn ƒë√¢y
            if choice in TOOLS:
                config["last_used_tool"] = choice
                save_config(config)

            if choice in TOOLS:
                tool = TOOLS[choice]
                if not run_from_github(tool["file"]):
                    print(f"{do}Kh√¥ng th·ªÉ ch·∫°y {tool['name']}!")
                    input(f"{vang}Nh·∫•n Enter ƒë·ªÉ quay l·∫°i menu...")

            elif choice == "3":
                check_update()
                config["last_check_update"] = time.time()
                save_config(config)

            elif choice == "4":
                show_author_info()

            elif choice == "0":
                print_slow(f"{vang}C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng c√¥ng c·ª• c·ªßa Tr·∫ßn ƒê·ª©c Doanh. T·∫°m bi·ªát!")
                loading_animation(1, "ƒêang tho√°t")
                log_activity("Tho√°t ch∆∞∆°ng tr√¨nh")
                sys.exit()

            else:
                print(f"{do}L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá! Vui l√≤ng ch·ªçn l·∫°i.")
                time.sleep(1)
                
        except KeyboardInterrupt:
            print(f"\n{vang}B·∫°n c√≥ mu·ªën tho√°t ch∆∞∆°ng tr√¨nh? (y/n): ", end="")
            try:
                confirm = input().strip().lower()
                if confirm == 'y':
                    print_slow(f"{vang}C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng c√¥ng c·ª• c·ªßa Tr·∫ßn ƒê·ª©c Doanh. T·∫°m bi·ªát!")
                    loading_animation(1, "ƒêang tho√°t")
                    log_activity("Tho√°t ch∆∞∆°ng tr√¨nh (b·ªüi KeyboardInterrupt)")
                    sys.exit()
            except:
                continue
        except Exception as e:
            error_msg = f"L·ªói kh√¥ng mong mu·ªën trong menu ch√≠nh: {str(e)}"
            print(f"{do}{error_msg}")
            log_error(error_msg)
            print(f"{vang}ƒêang kh·ªüi ƒë·ªông l·∫°i menu...")
            time.sleep(2)

# ===== Ki·ªÉm tra v√† b·∫Øt ƒë·∫ßu ch∆∞∆°ng tr√¨nh =====
if __name__ == "__main__":
    try:
        # Ki·ªÉm tra v√† t·∫°o th∆∞ m·ª•c logs
        create_logs_dir()
        
        # Ghi log b·∫Øt ƒë·∫ßu ch∆∞∆°ng tr√¨nh
        log_activity("Kh·ªüi ƒë·ªông ch∆∞∆°ng tr√¨nh")
        
        print(f"{xanh_la}ƒêang kh·ªüi ƒë·ªông c√¥ng c·ª•...")
        loading_animation(2, "Kh·ªüi ƒë·ªông")
        
        # Ki·ªÉm tra phi√™n b·∫£n Python
        if sys.version_info < (3, 6):
            print(f"{do}C·∫£nh b√°o: Ch∆∞∆°ng tr√¨nh y√™u c·∫ßu Python 3.6 tr·ªü l√™n ƒë·ªÉ ho·∫°t ƒë·ªông t·ªët nh·∫•t.")
            time.sleep(2)
        
        # Ki·ªÉm tra c√°c module c·∫ßn thi·∫øt
        required_modules = ["requests", "concurrent.futures", "json"]
        missing_modules = []
        
        for module in required_modules:
            try:
                __import__(module)
            except ImportError:
                missing_modules.append(module)
        
        if missing_modules:
            print(f"{do}C·∫£nh b√°o: M·ªôt s·ªë module c·∫ßn thi·∫øt b·ªã thi·∫øu: {', '.join(missing_modules)}")
            print(f"{xanh_la}ƒêang th·ª≠ c√†i ƒë·∫∑t c√°c module c√≤n thi·∫øu...")
            
            for module in missing_modules:
                try:
                    os.system(f"{sys.executable} -m pip install {module}")
                    print(f"{xanh_la}ƒê√£ c√†i ƒë·∫∑t {module}.")
                except:
                    print(f"{do}Kh√¥ng th·ªÉ c√†i ƒë·∫∑t {module}. H√£y th·ª≠ c√†i ƒë·∫∑t th·ªß c√¥ng b·∫±ng 'pip install {module}'")
        
        # B·∫Øt ƒë·∫ßu ch∆∞∆°ng tr√¨nh ch√≠nh
        main()
    except KeyboardInterrupt:
        print(f"\n{vang}ƒê√£ tho√°t b·ªüi ng∆∞·ªùi d√πng.")
        log_activity("Tho√°t ch∆∞∆°ng tr√¨nh (b·ªüi KeyboardInterrupt)")
    except Exception as e:
        error_msg = f"L·ªói nghi√™m tr·ªçng: {str(e)}"
        print(f"{do}{error_msg}")
        log_error(error_msg)
        
        # Hi·ªÉn th·ªã th√¥ng tin chi ti·∫øt v·ªÅ l·ªói n·∫øu c√≥ th·ªÉ
        try:
            import traceback
            log_error(traceback.format_exc())
        except:
            pass
            
        input(f"{vang}Nh·∫•n Enter ƒë·ªÉ tho√°t...")